diff --git a/node_modules/react-d3-graph/.eslintignore b/node_modules/react-d3-graph/.eslintignore
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/.prettierignore b/node_modules/react-d3-graph/.prettierignore
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/.prettierrc.js b/node_modules/react-d3-graph/.prettierrc.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/CHANGELOG.md b/node_modules/react-d3-graph/CHANGELOG.md
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/LICENSE b/node_modules/react-d3-graph/LICENSE
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/README.md b/node_modules/react-d3-graph/README.md
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/RELEASE_PROCESS.md b/node_modules/react-d3-graph/RELEASE_PROCESS.md
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/dist/rd3g.bundle.js b/node_modules/react-d3-graph/dist/rd3g.bundle.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/documentation.yml b/node_modules/react-d3-graph/documentation.yml
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/jest.config.js b/node_modules/react-d3-graph/jest.config.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/graph/Graph.js b/node_modules/react-d3-graph/lib/components/graph/Graph.js
old mode 100644
new mode 100755
index 28d6456..8c70bc5
--- a/node_modules/react-d3-graph/lib/components/graph/Graph.js
+++ b/node_modules/react-d3-graph/lib/components/graph/Graph.js
@@ -313,7 +313,6 @@ var Graph = function (_React$Component) {
             var focusedNodeId = _this.state.focusedNodeId;
 
             // In case an older animation was still not complete, clear previous timeout to ensure the new one is not cancelled
-
             if (_this.state.enableFocusAnimation) {
                 if (_this.focusAnimationTimeout) {
                     clearTimeout(_this.focusAnimationTimeout);
@@ -332,14 +331,49 @@ var Graph = function (_React$Component) {
             };
         };
 
+        // TODO - call this in render, to apply this.props.selectedNodes
+        _this._highlightSelection = function(nodes) {
+            let nodesObj = nodes;
+            // first clear highlighting
+            Object.keys(nodesObj).forEach(key => {
+                delete nodesObj[key].highlighted; 
+            });
+
+            this.props.selectedNodes.forEach(node => {
+                nodesObj[node.id].highlighted = true;
+            });
+            return nodesObj;
+        };
+
         _this._onDragEnd = function () {
+            console.log("_onDragEnd in Graph.js");
+
             return !_this.state.config.staticGraph && _this.state.config.automaticRearrangeAfterDropNode && _this.state.simulation.alphaTarget(_this.state.config.d3.alphaTarget).restart();
         };
 
         _this._onDragMove = function (ev, index, nodeList) {
             var id = nodeList[index].id;
 
-            if (!_this.state.config.staticGraph) {
+            if (_this.state.config.staticGraph) return;
+
+            const draggingSelection = _this.props.selectedNodes.map(n => n.id).includes(id);
+            if (_this.props.selectedNodes.length > 0 && draggingSelection) {
+                // drag every node in selectedNodes
+                _this.props.selectedNodes.forEach(node => {
+                    var draggedNode = _this.state.nodes[node.id];
+                    draggedNode.x += _d3Selection.event.dx;
+                    draggedNode.y += _d3Selection.event.dy;
+
+                    // set nodes fixing coords fx and fy
+                    draggedNode["fx"] = draggedNode.x;
+                    draggedNode["fy"] = draggedNode.y;
+
+                });
+
+                _this.props.handleSelectionDragMove && _this.props.handleSelectionDragMove(_d3Selection.event.dx, _d3Selection.event.dy);
+                _this._tick();
+            }
+            else {
                 // this is where d3 and react bind
                 var draggedNode = _this.state.nodes[id];
 
@@ -350,6 +384,8 @@ var Graph = function (_React$Component) {
                 draggedNode["fx"] = draggedNode.x;
                 draggedNode["fy"] = draggedNode.y;
 
+                _this.props.handleNodeDragMove && _this.props.handleNodeDragMove(id, draggedNode.x, draggedNode.y);
+
                 _this._tick();
             }
         };
@@ -398,6 +434,9 @@ var Graph = function (_React$Component) {
             if (tagName.toUpperCase() === "SVG" && name === "svg-container-" + _this.state.id) {
                 _this.props.onClickGraph && _this.props.onClickGraph();
             }
+
+            // clear edge highlighting
+            _this.state.highlightedLink = undefined;
         };
 
         _this.onClickNode = function (clickedNodeId) {
@@ -423,23 +462,46 @@ var Graph = function (_React$Component) {
                     _this.nodeClickTimer = clearTimeout(_this.nodeClickTimer);
                 }
             }
+
+            _this.props.selectNode(clickedNodeId);
         };
 
         _this.onMouseOverNode = function (id) {
             _this.props.onMouseOverNode && _this.props.onMouseOverNode(id);
 
+            if (_this.props.hasSelection && _this.props.hasSelection()) return;
+
             _this.state.config.nodeHighlightBehavior && _this._setNodeHighlightedValue(id, true);
         };
 
         _this.onMouseOutNode = function (id) {
             _this.props.onMouseOutNode && _this.props.onMouseOutNode(id);
 
-            _this.state.config.nodeHighlightBehavior && _this._setNodeHighlightedValue(id, false);
+            if (!_this.state.config.nodeHighlightBehavior) return;
+
+            if (_this.props.hasSelection && _this.props.hasSelection()) return;
+            _this._setNodeHighlightedValue(id, false);
+        };
+
+        _this.onClickLink = function (source, target) {
+            _this.props.selectLink(source, target);
+
+            if (_this.state.config.linkHighlightBehavior) {
+                _this.setState({
+                    highlightedLink: {
+                        source: source,
+                        target: target
+                    }
+                });
+                _this._tick();
+            }
         };
 
         _this.onMouseOverLink = function (source, target) {
             _this.props.onMouseOverLink && _this.props.onMouseOverLink(source, target);
 
+            if (_this.props.hasSelection && _this.props.hasSelection()) return;
+
             if (_this.state.config.linkHighlightBehavior) {
                 _this.state.highlightedLink = { source: source, target: target };
 
@@ -450,11 +512,12 @@ var Graph = function (_React$Component) {
         _this.onMouseOutLink = function (source, target) {
             _this.props.onMouseOutLink && _this.props.onMouseOutLink(source, target);
 
-            if (_this.state.config.linkHighlightBehavior) {
-                _this.state.highlightedLink = undefined;
+            if (!_this.state.config.linkHighlightBehavior) return;
 
-                _this._tick();
-            }
+            if (_this.props.hasSelection && _this.props.hasSelection()) return;
+
+            _this.state.highlightedLink = undefined;
+            _this._tick();
         };
 
         _this.pauseSimulation = function () {
@@ -544,7 +607,7 @@ var Graph = function (_React$Component) {
         }
     }, {
         key: "componentDidUpdate",
-        value: function componentDidUpdate() {
+        value: function componentDidUpdate(prevProps) {
             // if the property staticGraph was activated we want to stop possible ongoing simulation
             this.state.config.staticGraph && this.pauseSimulation();
 
@@ -578,14 +641,14 @@ var Graph = function (_React$Component) {
     }, {
         key: "render",
         value: function render() {
-            var _graphRenderer$render = graphRenderer.renderGraph(this.state.nodes, {
+            var _graphRenderer$render = graphRenderer.renderGraph(this._highlightSelection(this.state.nodes), {
                 onClickNode: this.onClickNode,
                 onDoubleClickNode: this.onDoubleClickNode,
                 onRightClickNode: this.props.onRightClickNode,
                 onMouseOverNode: this.onMouseOverNode,
                 onMouseOut: this.onMouseOutNode
             }, this.state.d3Links, this.state.links, {
-                onClickLink: this.props.onClickLink,
+                onClickLink: this.onClickLink,
                 onRightClickLink: this.props.onRightClickLink,
                 onMouseOverLink: this.onMouseOverLink,
                 onMouseOutLink: this.onMouseOutLink
diff --git a/node_modules/react-d3-graph/lib/components/graph/collapse.helper.js b/node_modules/react-d3-graph/lib/components/graph/collapse.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/graph/graph.builder.js b/node_modules/react-d3-graph/lib/components/graph/graph.builder.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/graph/graph.config.js b/node_modules/react-d3-graph/lib/components/graph/graph.config.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/graph/graph.const.js b/node_modules/react-d3-graph/lib/components/graph/graph.const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/graph/graph.helper.js b/node_modules/react-d3-graph/lib/components/graph/graph.helper.js
old mode 100644
new mode 100755
index 4117c77..d744320
--- a/node_modules/react-d3-graph/lib/components/graph/graph.helper.js
+++ b/node_modules/react-d3-graph/lib/components/graph/graph.helper.js
@@ -125,7 +125,7 @@ function _initializeNodes(graphNodes) {
     for (var i = 0; i < n; i++) {
         var node = graphNodes[i];
 
-        node.highlighted = false;
+        // node.highlighted = false;
 
         if (!node.hasOwnProperty("x")) {
             node.x = 0;
@@ -292,17 +292,55 @@ function checkForGraphElementsChanges(nextProps, currentState) {
         };
     });
     var graphElementsUpdated = !(_utils2.default.isDeepEqual(nextNodes, stateD3Nodes) && _utils2.default.isDeepEqual(nextLinks, stateD3Links));
+
+
+    // console.log("in checkForGraphElementsChanges");
+    // console.log("nodes: ", nextNodes, stateD3Nodes, _utils2.default.isDeepEqual(nextNodes, stateD3Nodes), JSON.stringify(nextNodes) === JSON.stringify(stateD3Nodes));
+    // console.log("links: ", nextLinks, stateD3Links, _utils2.default.isDeepEqual(nextLinks, stateD3Links), JSON.stringify(nextLinks) === JSON.stringify(stateD3Links));
+
+
     var newGraphElements = nextNodes.length !== stateD3Nodes.length || nextLinks.length !== stateD3Links.length || !_utils2.default.isDeepEqual(nextNodes.map(function (_ref) {
         var id = _ref.id;
         return { id: id };
     }), stateD3Nodes.map(function (_ref2) {
         var id = _ref2.id;
         return { id: id };
-    })) || !_utils2.default.isDeepEqual(nextLinks, stateD3Links.map(function (_ref3) {
+    })) || !(JSON.stringify(nextLinks.map(function (_refLink) {
+            return { source: _refLink.source, target: _refLink.target };
+        })) === JSON.stringify(stateD3Links));  // using shallow compare for now, for links
+        /*
+        !_utils2.default.isDeepEqual(nextLinks.map(function (_refLink) {
+            return { source: _refLink.source, target: _refLink.target };
+        }), //nextLinks,
+        stateD3Links.map(function (_ref3) {
+        var source = _ref3.source,
+            target = _ref3.target;
+        return { source: source, target: target };
+    })) ; */
+
+    // console.log("isDeepEqual Nodes: ", nextNodes, stateD3Nodes, _utils2.default.isDeepEqual(nextNodes.map(function (_ref) {
+    //     var id = _ref.id;
+    //     return { id: id };
+    // }), stateD3Nodes.map(function (_ref2) {
+    //     var id = _ref2.id;
+    //     return { id: id };
+    // })));
+    /*
+    console.log("isDeepEqual Links: ", nextLinks.map(function (_refLink) {
+            return { source: _refLink.source, target: _refLink.target };
+        }), stateD3Links, _utils2.default.isDeepEqual(nextLinks, stateD3Links.map(function (_ref3) {
         var source = _ref3.source,
             target = _ref3.target;
         return { source: source, target: target };
-    }));
+    })));
+    */
+    // console.log("isDeepEqual Links: ", nextLinks.map(function (_refLink) {
+    //         return { source: _refLink.source, target: _refLink.target };
+    //     }), stateD3Links, (JSON.stringify(nextLinks.map(function (_refLink) {
+    //         return { source: _refLink.source, target: _refLink.target };
+    //     })) === JSON.stringify(stateD3Links)));
+
+    // console.log({ graphElementsUpdated: graphElementsUpdated, newGraphElements: newGraphElements });
 
     return { graphElementsUpdated: graphElementsUpdated, newGraphElements: newGraphElements };
 }
diff --git a/node_modules/react-d3-graph/lib/components/graph/graph.renderer.js b/node_modules/react-d3-graph/lib/components/graph/graph.renderer.js
old mode 100644
new mode 100755
index 166a2ef..8ab2c5e
--- a/node_modules/react-d3-graph/lib/components/graph/graph.renderer.js
+++ b/node_modules/react-d3-graph/lib/components/graph/graph.renderer.js
@@ -63,6 +63,14 @@ function _renderLinks(nodes, links, linksMatrix, config, linkCallbacks, highligh
         });
     }
 
+    // hide links where source/target nodes are explicitly hidden
+    outLinks = outLinks.filter(function (link) {
+        const source = link.source;
+        const target = link.target;
+        const isHidden = nodes[source.id].hidden === true || nodes[target.id].hidden === true;
+        return !isHidden;
+    });
+
     return outLinks.map(function (link) {
         var source = link.source,
             target = link.target;
@@ -100,6 +108,11 @@ function _renderNodes(nodes, nodeCallbacks, config, highlightedNode, highlighted
         });
     }
 
+    // filter out explicitly hidden nodes
+    outNodes = outNodes.filter(function (nodeId) {
+        return !(nodes[nodeId].hidden && nodes[nodeId].hidden === true);
+    });
+
     return outNodes.map(function (nodeId) {
         var props = (0, _graph3.buildNodeProps)(Object.assign({}, nodes[nodeId], { id: "" + nodeId }), config, nodeCallbacks, highlightedNode, highlightedLink, transform);
 
diff --git a/node_modules/react-d3-graph/lib/components/link/Link.js b/node_modules/react-d3-graph/lib/components/link/Link.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/link/link.const.js b/node_modules/react-d3-graph/lib/components/link/link.const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/link/link.helper.js b/node_modules/react-d3-graph/lib/components/link/link.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/marker/Marker.js b/node_modules/react-d3-graph/lib/components/marker/Marker.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/marker/marker.const.js b/node_modules/react-d3-graph/lib/components/marker/marker.const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/marker/marker.helper.js b/node_modules/react-d3-graph/lib/components/marker/marker.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/node/Node.js b/node_modules/react-d3-graph/lib/components/node/Node.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/node/node.const.js b/node_modules/react-d3-graph/lib/components/node/node.const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/components/node/node.helper.js b/node_modules/react-d3-graph/lib/components/node/node.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/const.js b/node_modules/react-d3-graph/lib/const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/err.js b/node_modules/react-d3-graph/lib/err.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/index.js b/node_modules/react-d3-graph/lib/index.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/lib/utils.js b/node_modules/react-d3-graph/lib/utils.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/graph/Graph.jsx b/node_modules/react-d3-graph/src/components/graph/Graph.jsx
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/graph/collapse.helper.js b/node_modules/react-d3-graph/src/components/graph/collapse.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/graph/graph.builder.js b/node_modules/react-d3-graph/src/components/graph/graph.builder.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/graph/graph.config.js b/node_modules/react-d3-graph/src/components/graph/graph.config.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/graph/graph.const.js b/node_modules/react-d3-graph/src/components/graph/graph.const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/graph/graph.helper.js b/node_modules/react-d3-graph/src/components/graph/graph.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/graph/graph.renderer.jsx b/node_modules/react-d3-graph/src/components/graph/graph.renderer.jsx
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/link/Link.jsx b/node_modules/react-d3-graph/src/components/link/Link.jsx
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/link/link.const.js b/node_modules/react-d3-graph/src/components/link/link.const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/link/link.helper.js b/node_modules/react-d3-graph/src/components/link/link.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/marker/Marker.jsx b/node_modules/react-d3-graph/src/components/marker/Marker.jsx
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/marker/marker.const.js b/node_modules/react-d3-graph/src/components/marker/marker.const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/marker/marker.helper.js b/node_modules/react-d3-graph/src/components/marker/marker.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/node/Node.jsx b/node_modules/react-d3-graph/src/components/node/Node.jsx
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/node/node.const.js b/node_modules/react-d3-graph/src/components/node/node.const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/components/node/node.helper.js b/node_modules/react-d3-graph/src/components/node/node.helper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/const.js b/node_modules/react-d3-graph/src/const.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/err.js b/node_modules/react-d3-graph/src/err.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/index.js b/node_modules/react-d3-graph/src/index.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/src/utils.js b/node_modules/react-d3-graph/src/utils.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-d3-graph/tsconfig.json b/node_modules/react-d3-graph/tsconfig.json
old mode 100644
new mode 100755
